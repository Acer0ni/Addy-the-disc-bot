"""yup

Revision ID: 0fcd31033c41
Revises: 0023b6e21b6a
Create Date: 2022-04-04 16:03:48.674654

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import orm
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.dialects import postgresql

Base = declarative_base()

# revision identifiers, used by Alembic.
revision = "0fcd31033c41"
down_revision = "0023b6e21b6a"
branch_labels = None
depends_on = None


class Transaction(Base):
    __tablename__ = "Transactions"

    id = sa.Column(sa.Integer, primary_key=True, autoincrement="auto")
    amount_transacted = sa.Column(sa.Float, nullable=False)
    coin_price = sa.Column(sa.Float, nullable=False)
    total_price = sa.Column(sa.Float, nullable=False)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "Transactions",
        "coin_price_at_time_of_transaction",
        new_column_name="coin_price",
    )
    op.add_column("Transactions", sa.Column("total_price", sa.Float(), nullable=True))
    # begin data migration
    bind = op.get_bind()
    session = orm.Session(bind=bind)
    for t in session.query(Transaction):
        t.total_price = t.coin_price
        t.coin_price = t.coin_price / t.amount_transacted
        session.add(t)
    session.commit()
    op.alter_column(
        "Transactions",
        "total_price",
        nullable=False,
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "Transactions",
        "coin_price",
        new_column_name="coin_price_at_time_of_transaction",
    )
    op.drop_column("Transactions", "total_price")

    # ### end Alembic commands ###
